---
- debug: var=student_total

- name: ControllerMigrationCasC | Launch Instance (block)
  block:
    - name: ControllerMigrationCasC | Launch AWX Instances
      amazon.aws.ec2_instance:
        key_name: "{{ ec2_name_prefix }}-key"
        security_group: "{{ ec2_security_group }}"
        instance_type: "{{ ec2_info['rhel9_awx']['size'] }}"
        image_id: "{{ rhel9_controller_ami.image_id }}"
        region: "{{ ec2_region }}"
        exact_count: "{{ student_total|int }}"
        state: running
        network:
          assign_public_ip: true
        filters:
          instance-state-name: running
          "tag:Workshop_awx": "{{ ec2_name_prefix }}-awx"
        tags:
          Workshop_awx: "{{ ec2_name_prefix }}-awx"
          Name: "{{ ec2_name_prefix }}-awx"
          App: AnsibleWorkshop
          Workshop: "{{ ec2_name_prefix }}"
          uuid: "{{ ec2_name_prefix }}"
          guid: "{{ ec2_name_prefix }}"
          Workshop_type: "{{ workshop_type }}"
          AWS_USERNAME: "{{ aws_user }}"
          owner: "{{ aws_user }}"
          Info: "Username that provisioned this-> {{ aws_user }}"
          Linklight: "This was provisioned through the linklight provisioner"
          Students: "{{ student_total }}"
          short_name: 'awx'
          long_name: "awx.{{ ec2_name_prefix }}.{{ workshop_dns_zone | default('') }}"
          username: "{{ ec2_info['rhel9_awx']['username'] }}"
          ansible-workshops: "true"
        wait: "{{ ec2_wait }}"
        vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_type: "{{ ec2_info['rhel9_awx'].disk_volume_type }}"
              volume_size: "{{ ec2_info['rhel9_awx'].disk_space }}"
              iops: "{{ ec2_info['rhel9_awx'].disk_iops }}"
              throughput: "{{ ec2_info['rhel9_awx'].disk_throughput }}"
              delete_on_termination: true
        user_data: "{{ lookup('template', 'instances_controller_migration_casc.j2') }}"
      register: awx_output

    - debug:
        msg: "{{ awx_output }}"

- name: Ensure tags are present for AWX nodes
  amazon.aws.ec2_tag:
    region: "{{ ec2_region }}"
    resource: "{{ item.1.instance_id }}"
    state: present
    tags:
      Name: "{{ ec2_name_prefix }}-student{{ item.0 + 1 }}-awx"
      Index: "{{ item[0] }}"
      Student: "student{{ item.0 + 1 }}"
      short_name: "student{{ item.0 + 1 }}.awx"
      long_name: "student{{ item.0 + 1 }}.awx.{{ ec2_name_prefix }}.{{ workshop_dns_zone | default('') }}"
      launch_time: "{{ item.1.launch_time }}"
  with_indexed_items:
    - "{{ awx_output.instances }}"
  when: awx_output.instances is defined
...
