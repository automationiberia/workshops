---
- name: check if aap.tar.gz exists
  ansible.builtin.debug:
    msg: "{{ playbook_dir }}/aap.tar.gz"

- name: Block to get the aap.tar.gz checksum
  block:
    - name: Check if aap.tar.gz exists with stat module
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/aap.tar.gz"
        checksum_algorithm: sha256
      register: stat_var
    - name: Fail if there's no checksum to give a try for lnk_source
      ansible.builtin.fail:
      when: stat_var.stat.checksum is not defined
  rescue:
    - name: Check if aap.tar.gz exists with stat module for symbolic link
      ansible.builtin.stat:
        path: "{{ stat_var.stat.lnk_source }}"
        checksum_algorithm: sha256
      register: stat_var
      when: stat_var.stat.lnk_source is defined

- name: Print out stat_var
  ansible.builtin.debug:
    msg: "stat_var: {{ stat_var }}"

- name: attempt to download specified AAP from specified URL if we don't already have it
  when:
    - aap_download_url is defined
    - stat_var.stat.checksum | default("") != provided_sha_value
  block:
    - name: download aap.tar.gz from specified URL
      ansible.builtin.include_tasks: 09_download_url.yml

- name: attempt to download specified AAP if we don't already have it
  when:
    - aap_download_url is not defined
    - stat_var.stat.checksum | default("") != provided_sha_value
  block:
    - name: download aap.tar.gz from access.redhat.com
      ansible.builtin.include_tasks: 10_download.yml

  rescue:
    - name: aap_download role has entered rescue stanza
      ansible.builtin.debug:
        msg: "download from access.redhat.com has failed, attempting to see if there is a cached aap.tar.gz file"

    - name: fail if file aap.tar.gz not found
      ansible.builtin.fail:
        msg: "There was no app.tar.gz file found to install AAP"
      when: not stat_var.stat.exists

- name: Block to get the aap.tar.gz checksum (post download)
  block:
    - name: Check if aap.tar.gz exists with stat module (post download)
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/aap.tar.gz"
        checksum_algorithm: sha256
      register: stat_var
    - name: Fail if there's no checksum to give a try for lnk_source (post download)
      ansible.builtin.fail:
      when: stat_var.stat.checksum is not defined
  rescue:
    - name: Check if aap.tar.gz exists with stat module for symbolic link (post download)
      ansible.builtin.stat:
        path: "{{ stat_var.stat.lnk_source }}"
        checksum_algorithm: sha256
      register: stat_var
      when: stat_var.stat.lnk_source is defined

- name: Print out stat_var (post download)
  ansible.builtin.debug:
    msg: "stat_var: {{ stat_var }}"

- name: Verify sha256sum of aap.tar.gz
  ansible.builtin.fail:
    msg: "Failure, sha256sum does not match"
  when: stat_var.stat.checksum != provided_sha_value
